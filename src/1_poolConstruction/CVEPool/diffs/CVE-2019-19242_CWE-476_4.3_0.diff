PACK:sqlite##sqlite
CLONE:git clone https://github.com/sqlite/sqlite.git
URL:https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c

diff --git a/src/expr.c b/src/expr.c
index 45c053a8c3..a3ed249ee0 100644
--- a/src/expr.c
+++ b/src/expr.c
@@ -3605,7 +3605,12 @@ int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){
         ** constant.
         */
         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);
-        int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);
+        int aff;
+        if( pExpr->y.pTab ){
+          aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);
+        }else{
+          aff = pExpr->affExpr;
+        }
         if( aff>SQLITE_AFF_BLOB ){
           static const char zAff[] = "B\000C\000D\000E";
           assert( SQLITE_AFF_BLOB=='A' );

diff --git a/src/wherecode.c b/src/wherecode.c
index d34912eb7b..893ba7b8e8 100644
--- a/src/wherecode.c
+++ b/src/wherecode.c
@@ -1141,6 +1141,8 @@ static int whereIndexExprTransColumn(Walker *p, Expr *pExpr){
   if( pExpr->op==TK_COLUMN ){
     IdxExprTrans *pX = p->u.pIdxTrans;
     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){
+      assert( pExpr->y.pTab!=0 );
+      pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);
       pExpr->iTable = pX->iIdxCur;
       pExpr->iColumn = pX->iIdxCol;
       pExpr->y.pTab = 0;

